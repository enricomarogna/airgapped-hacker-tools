import{_ as i,c as t,a5 as e,o as a}from"./chunks/framework.B5CpDqM0.js";const c=JSON.parse('{"title":"Directory fuzzing","description":"","frontmatter":{"authors":"ShutdownRepo"},"headers":[],"relativePath":"web/recon/directory-fuzzing.md","filePath":"web/recon/directory-fuzzing.md","lastUpdated":1724982529000}'),r={name:"web/recon/directory-fuzzing.md"};function n(h,s,l,o,p,d){return a(),t("div",null,s[0]||(s[0]=[e('<h1 id="directory-fuzzing" tabindex="-1">Directory fuzzing <a class="header-anchor" href="#directory-fuzzing" aria-label="Permalink to &quot;Directory fuzzing&quot;">​</a></h1><h2 id="theory" tabindex="-1">Theory <a class="header-anchor" href="#theory" aria-label="Permalink to &quot;Theory&quot;">​</a></h2><p>While Crawling allows testers to build the indexed architecture of website, this technique can&#39;t find directories and files that are not referenced. Directory fuzzing (a.k.a. directory bruteforcing) is a technique that can find some of those &quot;hidden&quot; paths. Dictionaries of common paths are used to request the web app for each path until exhaustion of the list. This technique relies on the attacker using a dictionnary/wordlist. A request is made for every line of the wordlist to differentiate pages that exist and pages that don&#39;t</p><h2 id="practice" tabindex="-1">Practice <a class="header-anchor" href="#practice" aria-label="Permalink to &quot;Practice&quot;">​</a></h2><h3 id="fuzzing-tools" tabindex="-1">Fuzzing tools <a class="header-anchor" href="#fuzzing-tools" aria-label="Permalink to &quot;Fuzzing tools&quot;">​</a></h3><p>Tools like <a href="http://dirb.sourceforge.net/" target="_blank" rel="noreferrer">dirb</a> (C), <a href="https://sourceforge.net/projects/dirbuster/" target="_blank" rel="noreferrer">dirbuster</a> (Java), <a href="https://github.com/OJ/gobuster" target="_blank" rel="noreferrer">gobuster</a> (Go), <a href="https://github.com/xmendez/wfuzz" target="_blank" rel="noreferrer">wfuzz</a> (Python), <a href="https://github.com/ffuf/ffuf" target="_blank" rel="noreferrer">ffuf</a> (Go) and <a href="https://github.com/epi052/feroxbuster" target="_blank" rel="noreferrer">feroxbuster</a> (Rust) can do directory fuzzing/bruteforcing. Burp Suite can do it too. Depending on the web application, one will be better suited than another and additional options will be needed.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gobuster</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --useragent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;PENTEST&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --wordlist</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/path/to/wordlist.txt&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $URL</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wfuzz</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --hc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 404,403</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;User-Agent: PENTEST&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -z</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file,&quot;/path/to/wordlist.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $URL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/FUZZ</span></span></code></pre></div><p><a href="https://github.com/ffuf/ffuf" target="_blank" rel="noreferrer">ffuf</a> (Go) and <a href="https://github.com/epi052/feroxbuster" target="_blank" rel="noreferrer">feroxbuster</a> (Rust) are two awesome alternatives that can do recursive fuzzing unlike <a href="https://github.com/OJ/gobuster" target="_blank" rel="noreferrer">gobuster</a> (Go) and <a href="https://github.com/xmendez/wfuzz" target="_blank" rel="noreferrer">wfuzz</a> (Python) mentioned above.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffuf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;User-Agent: PENTEST&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/path/to/wordlist.txt&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -maxtime-job</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 60</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -recursion</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -recursion-depth</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $URL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/FUZZ</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">feroxbuster</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;User-Agent: PENTEST&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/path/to/wordlist.txt&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://192.168.10.10/</span></span></code></pre></div><div class="caution custom-block"><p>Directory fuzzing needs to be slowed down when testing production instances as it could lead to an unintended denial of service, especially when using <a href="https://github.com/epi052/feroxbuster" target="_blank" rel="noreferrer">feroxbuster</a>, a tool known for it&#39;s high speed.</p></div><h3 id="wordlists" tabindex="-1">Wordlists <a class="header-anchor" href="#wordlists" aria-label="Permalink to &quot;Wordlists&quot;">​</a></h3><p>In order to fuzz more accurately, there are many dictionaries adapted for many situations, most of which can be downloaded from SecLists. SecLists can be installed (<code>apt install seclists</code> or downloaded directly from <a href="https://github.com/danielmiessler/SecLists" target="_blank" rel="noreferrer">the GitHub repo</a>).</p><p>The ultimate combo is <a href="https://github.com/ffuf/ffuf" target="_blank" rel="noreferrer">ffuf</a> + <a href="https://github.com/junegunn/fzf" target="_blank" rel="noreferrer">fzf</a> + <a href="https://github.com/danielmiessler/SecLists" target="_blank" rel="noreferrer">seclists</a>.</p><div class="success custom-block"><p>In the following command, <a href="https://github.com/junegunn/fzf" target="_blank" rel="noreferrer">fzf</a> is used to print a file fuzzer prompt allowing the user to quickly choose the perfect wordlist for content discovery.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">feroxbuster</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;User-Agent: PENTEST&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fzf-wordlists</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://192.168.10.10/</span></span></code></pre></div><p>In this case, <code>fzf-wordlists</code> is an alias to the following command using fzf and find to fuzz wordlists from specific directories.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/seclists</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/wordlists</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/dirbuster</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/wfuzz</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/dirb</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fzf</span></span></code></pre></div></div>',16)]))}const u=i(r,[["render",n]]);export{c as __pageData,u as default};
