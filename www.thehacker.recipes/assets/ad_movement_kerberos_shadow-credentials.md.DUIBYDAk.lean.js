import{_ as l,c,a5 as n,G as i,w as s,B as h,o as d,j as e,a as t}from"./chunks/framework.B5CpDqM0.js";const w=JSON.parse('{"title":"Shadow Credentials","description":"","frontmatter":{"authors":"ShutdownRepo, WoBuGs, mpgn, p0dalirius, sckdev"},"headers":[],"relativePath":"ad/movement/kerberos/shadow-credentials.md","filePath":"ad/movement/kerberos/shadow-credentials.md","lastUpdated":1724982529000}'),p={name:"ad/movement/kerberos/shadow-credentials.md"};function k(u,a,b,y,g,m){const r=h("PluginTabsTab"),o=h("PluginTabs");return d(),c("div",null,[a[2]||(a[2]=n('<h1 id="shadow-credentials" tabindex="-1">Shadow Credentials <a class="header-anchor" href="#shadow-credentials" aria-label="Permalink to &quot;Shadow Credentials&quot;">​</a></h1><h2 id="theory" tabindex="-1">Theory <a class="header-anchor" href="#theory" aria-label="Permalink to &quot;Theory&quot;">​</a></h2><p>The Kerberos authentication protocol works with tickets in order to grant access. An ST (Service Ticket) can be obtained by presenting a TGT (Ticket Granting Ticket). That prior TGT can only be obtained by validating a first step named &quot;pre-authentication&quot; (except if that requirement is explicitly removed for some accounts, making them vulnerable to <a href="./asreproast">ASREProast</a>). The pre-authentication can be validated symmetrically (with a DES, RC4, AES128 or AES256 key) or asymmetrically (with certificates). The asymmetrical way of pre-authenticating is called PKINIT.</p><blockquote><p>The client has a public-private key pair, and encrypts the pre-authentication data with their private key, and the KDC decrypts it with the client’s public key. The KDC also has a public-private key pair, allowing for the exchange of a session key.</p><p>(<a href="https://posts.specterops.io/shadow-credentials-abusing-key-trust-account-mapping-for-takeover-8ee1a53566ab" target="_blank" rel="noreferrer">specterops.io</a>)</p></blockquote><p>Active Directory user and computer objects have an attribute called <code>msDS-KeyCredentialLink</code> where raw public keys can be set. When trying to pre-authenticate with PKINIT, the KDC will check that the authenticating user has knowledge of the matching private key, and a TGT will be sent if there is a match.</p><p>There are multiple scenarios where an attacker can have control over an account that has the ability to edit the <code>msDS-KeyCredentialLink</code> (a.k.a. &quot;kcl&quot;) attribute of other objects (e.g. member of a <a href="./../builtins/security-groups">special group</a>, has <a href="./../dacl/">powerful ACEs</a>, etc.). This allows attackers to create a key pair, append to raw public key in the attribute, and obtain persistent and stealthy access to the target object (can be a user or a computer).</p><h2 id="practice" tabindex="-1">Practice <a class="header-anchor" href="#practice" aria-label="Permalink to &quot;Practice&quot;">​</a></h2><p>In order to exploit that technique, the attacker needs to:</p><ol><li>be in a domain that supports PKINIT and containing at least one Domain Controller running Windows Server 2016 or above.</li><li>be in a domain where the Domain Controller(s) has its own key pair (for the session key exchange) (e.g. happens when AD CS is enabled or when a certificate authority (CA) is in place).</li><li>have control over an account that can edit the target object&#39;s <code>msDs-KeyCredentialLink</code> attribute.</li></ol><div class="tip custom-block"><p>The <code>msDS-KeyCredentialLink</code> feature was introduced with Windows Server 2016. However, this is not to be confused with PKINIT which was already present in Windows 2000. The <code>msDS-KeyCredentialLink</code> feature allows to link an X509 certificate to a domain object, that&#39;s all.</p></div><p>If those per-requisites are met, an attacker can</p><ol><li>create an RSA key pair</li><li>create an X509 certificate configured with the public key</li><li>create a <a href="https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-adts/de61eb56-b75f-4743-b8af-e9be154b47af" target="_blank" rel="noreferrer">KeyCredential</a> structure featuring the raw public key and add it to the <code>msDs-KeyCredentialLink</code> attribute</li><li>authenticate using PKINIT and the certificate and private key</li></ol>',12)),i(o,null,{default:s(()=>[i(r,{label:"UNIX-like"},{default:s(()=>a[0]||(a[0]=[e("p",null,[t("From UNIX-like systems, the "),e("code",null,"msDs-KeyCredentialLink"),t(" attribute of a user or computer target can be manipulated with the "),e("a",{href:"https://github.com/ShutdownRepo/pywhisker",target:"_blank",rel:"noreferrer"},"pyWhisker"),t(" tool.")],-1),e("div",{class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"pywhisker.py"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -d"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "FQDN_DOMAIN"'),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -u"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "USER"'),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -p"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "PASSWORD"'),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --target"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "TARGET_SAMNAME"'),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --action"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "list"')])])])],-1),e("div",{class:"success custom-block"},[e("p",null,[t("The "),e("code",null,"add"),t(" action from pywhisker is featured in ntlmrelayx.")]),e("div",{class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"ntlmrelayx"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -t"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ldap://dc02"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --shadow-credentials"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --shadow-target"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'dc01$'")])])])])],-1),e("p",null,[t("When the public key has been set in the "),e("code",null,"msDs-KeyCredentialLink"),t(" of the target, the certificate generated can be used with "),e("a",{href:"./pass-the-certificate"},"Pass-the-Certificate"),t(" to obtain a TGT and further access.")],-1)])),_:1}),i(r,{label:"Windows"},{default:s(()=>a[1]||(a[1]=[e("p",null,[t("From Windows systems, the "),e("code",null,"msDs-KeyCredentialLink"),t(" attribute of a target user or computer can be manipulated with the "),e("a",{href:"https://github.com/eladshamir/Whisker",target:"_blank",rel:"noreferrer"},"Whisker"),t(" tool.")],-1),e("div",{class:"language-powershell vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"powershell"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"Whisker.exe"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," add "),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"/"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"target:"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"TARGET_SAMNAME"'),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," /"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"domain:"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"FQDN_DOMAIN"'),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," /"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"dc:"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"DOMAIN_CONTROLLER"'),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," /"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"path:"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"cert.pfx"'),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," /"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"password:"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"pfx-password"')])])])],-1),e("p",null,[t("When the public key has been set in the "),e("code",null,"msDs-KeyCredentialLink"),t(" of the target, the certificate generated can be used with "),e("a",{href:"./pass-the-certificate"},"Pass-the-Certificate"),t(" to obtain a TGT and further access.")],-1)])),_:1})]),_:1}),a[3]||(a[3]=n('<div class="tip custom-block"><p class="custom-block-title">Self edit the KCL attribute</p><p>User objects can&#39;t edit their own <code>msDS-KeyCredentialLink</code> attribute while computer objects can. This means the following scenario could work: <a href="./../mitm-and-coerced-authentications/">trigger an NTLM authentication</a> from DC01, <a href="./../ntlm/relay">relay it</a> to DC02, make pywhisker edit DC01&#39;s attribute to create a Kerberos PKINIT pre-authentication backdoor on it, and have persistent access to DC01 with PKINIT and <a href="./ptc">pass-the-cache</a>.</p><p>Computer objects can only edit their own <code>msDS-KeyCredentialLink</code> attribute if KeyCredential is not set already.</p></div><h2 id="resources" tabindex="-1">Resources <a class="header-anchor" href="#resources" aria-label="Permalink to &quot;Resources&quot;">​</a></h2><p><a href="https://posts.specterops.io/shadow-credentials-abusing-key-trust-account-mapping-for-takeover-8ee1a53566ab" target="_blank" rel="noreferrer">https://posts.specterops.io/shadow-credentials-abusing-key-trust-account-mapping-for-takeover-8ee1a53566ab</a></p><p><a href="https://github.com/eladshamir/Whisker" target="_blank" rel="noreferrer">https://github.com/eladshamir/Whisker</a></p><p><a href="https://github.com/ShutdownRepo/pywhisker" target="_blank" rel="noreferrer">https://github.com/ShutdownRepo/pywhisker</a></p>',5))])}const C=l(p,[["render",k]]);export{w as __pageData,C as default};
