import{_ as e,c as i,a5 as t,o as s}from"./chunks/framework.B5CpDqM0.js";const f=JSON.parse('{"title":"Web Application Firewall (WAF)","description":"","frontmatter":{"authors":"KenjiEndo15, ShutdownRepo"},"headers":[],"relativePath":"web/recon/waf-fingerprinting.md","filePath":"web/recon/waf-fingerprinting.md","lastUpdated":1724982529000}'),n={name:"web/recon/waf-fingerprinting.md"};function r(p,a,l,h,o,c){return s(),i("div",null,a[0]||(a[0]=[t(`<h1 id="web-application-firewall-waf" tabindex="-1">Web Application Firewall (WAF) <a class="header-anchor" href="#web-application-firewall-waf" aria-label="Permalink to &quot;Web Application Firewall (WAF)&quot;">​</a></h1><h2 id="theory" tabindex="-1">Theory <a class="header-anchor" href="#theory" aria-label="Permalink to &quot;Theory&quot;">​</a></h2><p>Many web applications stand behind a WAF (Web Application Firewall) that aim the protecting app from different types of attacks (<a href="./../../web/inputs/xss">XSS</a>, <a href="./../../web/inputs/sqli">SQLi</a>, etc.) by monitoring and filtering requests. Identifying if a WAF is used, and if so what type it is, can help bypass known filters.</p><h2 id="practice" tabindex="-1">Practice <a class="header-anchor" href="#practice" aria-label="Permalink to &quot;Practice&quot;">​</a></h2><p>This can be done with tools like <a href="https://github.com/EnableSecurity/wafw00f" target="_blank" rel="noreferrer">WAFW00F</a> (Python), <a href="https://github.com/Ekultek/WhatWaf" target="_blank" rel="noreferrer">WhatWaf</a> (Python) or <a href="https://nmap.org" target="_blank" rel="noreferrer">nmap</a> or sometimes by manually looking at cookies and HTTP response headers.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wafw00f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $URL</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">whatwaf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $URL</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nmap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $PORT </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">--script=http-waf-fingerprint,http-waf-detect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $URL</span></span></code></pre></div>`,6)]))}const k=e(n,[["render",r]]);export{f as __pageData,k as default};
