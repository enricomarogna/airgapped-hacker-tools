import{_ as a,c as n,a5 as i,o as e}from"./chunks/framework.B5CpDqM0.js";const d=JSON.parse('{"title":"Port scanning","description":"","frontmatter":{"authors":"ShutdownRepo"},"headers":[],"relativePath":"infra/recon/port-scanning.md","filePath":"infra/recon/port-scanning.md","lastUpdated":1724982529000}'),t={name:"infra/recon/port-scanning.md"};function p(o,s,l,r,h,c){return e(),n("div",null,s[0]||(s[0]=[i(`<h1 id="port-scanning" tabindex="-1">Port scanning <a class="header-anchor" href="#port-scanning" aria-label="Permalink to &quot;Port scanning&quot;">​</a></h1><h2 id="theory" tabindex="-1">Theory <a class="header-anchor" href="#theory" aria-label="Permalink to &quot;Theory&quot;">​</a></h2><p>When targeting machines connected to a network, identifying which services are running and accessible remotely allows attackers to have a better understanding of the attack surface.</p><p>Services open to the network usually rely on one of two transport protocols: TCP or UDP.</p><ul><li>TCP (Transmission Control Protocol): requires a 3-way handshake to establish a connection. TCP is the most reliable transport protocol of the two as it allows re-transmission of lost data packets.</li><li>UDP (User Datagram Protocol): doesn&#39;t require any connection at all. Packets can be sent freely but may not arrive. UDP is faster, simpler, but less reliable. It&#39;s mostly used for streaming purposes and for services that have a high speed requirement.</li></ul><p>TCP and UDP are quite similar in the sense that they work with ports. Services can be bound to ports and users go through these ports to access the services.</p><div class="tip custom-block"><p>ICMP (Internet Control Message Protocol) is a separate transport protocol that is commonly known for its &quot;echo request&quot; message used to &quot;ping&quot; machines across networks. ICMP doesn&#39;t rely on ports like TCP and UDP do. There is no port in ICMP.</p></div><p>While there are many services that are well known for using common ports (e.g. <code>80/TCP</code> for HTTP, <code>443/TCP</code> for HTTPS, <code>22/TCP</code> for SSH, etc.), the port is just a number. Any port from 0 to 65535 can be bound to any service. Machines (a.k.a. hosts) can theoretically have 65536 ports open on TCP, and 65536 ports open on UDP at the same time.</p><p>Knowing which ports are open on a host, and which services hide between these ports is essential in the host reconnaissance part of an intrusion attempt.</p><h2 id="practice" tabindex="-1">Practice <a class="header-anchor" href="#practice" aria-label="Permalink to &quot;Practice&quot;">​</a></h2><p>The most commonly used tool for port scanning is <a href="https://nmap.org/" target="_blank" rel="noreferrer">nmap</a> (&quot;Network Mapper&quot;). This tool features a lot of options but the main ones are the following.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SCAN TECHNIQUES</span></span>
<span class="line"><span> -sS/sT/sA: TCP SYN/Connect()/ACK scans</span></span>
<span class="line"><span> -sU: UDP Scan</span></span>
<span class="line"><span></span></span>
<span class="line"><span>PORT SPECIFICATION AND SCAN ORDER</span></span>
<span class="line"><span> -p : Only scan specified ports</span></span>
<span class="line"><span> Ex: -p22; -p1-65535; -p U:53,111,137,T:21-25,80,139,8080</span></span>
<span class="line"><span> -F: Fast mode - Scan 100 most common</span></span>
<span class="line"><span> --top-ports : Scan  most common ports</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>TIMING AND PERFORMANCE</span></span>
<span class="line"><span> -T&lt;0-5&gt;: Set timing template (higher is faster)</span></span>
<span class="line"><span> Templates (0-5): paranoid|sneaky|polite|normal|aggressive|insane </span></span>
<span class="line"><span></span></span>
<span class="line"><span>SERVICE/VERSION DETECTION</span></span>
<span class="line"><span> -sV: Probe open ports to determine service/version info</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>SCRIPT SCAN</span></span>
<span class="line"><span> -sC: equivalent to --script=default</span></span>
<span class="line"><span></span></span>
<span class="line"><span>HOST DISCOVERY</span></span>
<span class="line"><span> -Pn: Treat all hosts as online -- skip host discovery</span></span>
<span class="line"><span></span></span>
<span class="line"><span>FIREWALL/IDS EVASION AND SPOOFING</span></span>
<span class="line"><span> -f; --mtu : fragment packets (optionally w/given MTU)</span></span>
<span class="line"><span> -S : Spoof source address</span></span>
<span class="line"><span> -e : Use specified interface</span></span>
<span class="line"><span></span></span>
<span class="line"><span>OUTPUT</span></span>
<span class="line"><span> -oN/-oX/-oS/-oG : Output scan in normal, XML, s|: Output in the three major formats at once</span></span>
<span class="line"><span> -v: Increase verbosity level (use -vv or more for greater effect)</span></span></code></pre></div><p>The following nmap commands are the most commonly used.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># basic TCP SYN scanning of the 1000 most common TCP ports, with a normal speed</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nmap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $TARGET</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># basic TCP SYN scanning of the 100 most common TCP ports, with a normal speed</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nmap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -F</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $TARGET</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># scan all TCP ports with an aggressive speed, skipping host discovery, adding verbosity</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nmap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Pn</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;0-65535&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $TARGET</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># scan specific TCP ports, enable service/version detection and script scanning, skipping host discovery, with an aggressive speed</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nmap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Pn</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sC</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sV</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;20-25,53,80,135,139,443,445&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $TARGET</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># same, but scanning known vulnerabilites (CVEs) instead of default scripts</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nmap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Pn</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --script</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vuln</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sV</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;20-25,53,80,135,139,443,445&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $TARGET</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># scan 20 most common UDP ports and enable service detection</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nmap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sU</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sV</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --top-ports</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $TARGET</span></span></code></pre></div><div class="tip custom-block"><p>SCTP (Stream Control Transmission Protocol) is another transport protocol. Its main benfits are high reliability, congestion control and better error handling. This protocol is quite rare but is sometimes used and is worth scanning. Just like TCP and UDP, SCTP works with ports. The <code>-sY</code> option can be used in nmap to scan SCTP ports, similarly to <code>-sU</code> for UDP.</p></div><p><a href="https://github.com/robertdavidgraham/masscan" target="_blank" rel="noreferrer">MASSCAN</a> (C) is an alternative to nmap, mostly known for its speed. Its usage is similar to nmap but focuses essentially on port scanning. Services, versions and scripts scans should be conducted with nmap. Below is an example of masscan being used to scan all TCP and UDP ports of a host with a high rate.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> masscan</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $INTERFACE </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-p0-65535,U:0-65535</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --max-rate</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $TARGETS</span></span></code></pre></div><h2 id="resources" tabindex="-1">Resources <a class="header-anchor" href="#resources" aria-label="Permalink to &quot;Resources&quot;">​</a></h2><p><a href="https://captmeelo.com/pentest/2019/07/29/port-scanning.html" target="_blank" rel="noreferrer">https://captmeelo.com/pentest/2019/07/29/port-scanning.html</a></p>`,19)]))}const g=a(t,[["render",p]]);export{d as __pageData,g as default};
