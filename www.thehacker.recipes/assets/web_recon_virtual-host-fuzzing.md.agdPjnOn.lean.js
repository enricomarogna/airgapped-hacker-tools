import{_ as s,c as e,a5 as i,o as a}from"./chunks/framework.B5CpDqM0.js";const k=JSON.parse('{"title":"Subdomain & vhost fuzzing","description":"","frontmatter":{"authors":"ShutdownRepo"},"headers":[],"relativePath":"web/recon/virtual-host-fuzzing.md","filePath":"web/recon/virtual-host-fuzzing.md","lastUpdated":1724982529000}'),n={name:"web/recon/virtual-host-fuzzing.md"};function o(r,t,h,l,p,d){return a(),e("div",null,t[0]||(t[0]=[i('<h1 id="subdomain-vhost-fuzzing" tabindex="-1">Subdomain &amp; vhost fuzzing <a class="header-anchor" href="#subdomain-vhost-fuzzing" aria-label="Permalink to &quot;Subdomain &amp; vhost fuzzing&quot;">​</a></h1><h2 id="theory" tabindex="-1">Theory <a class="header-anchor" href="#theory" aria-label="Permalink to &quot;Theory&quot;">​</a></h2><p>A web server can host multiple websites for multiple domain names (websites). In order to choose what website to show for what domain, many use what is called &quot;virtual hosting&quot;. Virtual hosting can be based on a name, an IP, or a port (<a href="https://en.wikipedia.org/wiki/Virtual_hosting#Name-based" target="_blank" rel="noreferrer">read more</a>).</p><p>Two main mechanisms can be used to access a website on a virtual host:</p><ul><li>HTTP: the use of the <code>Host</code> request header. The client uses the <code>directive to connect to the domain name of the server. Optionally, it can use the</code> directive to specify a TCP port number on which the server is listening.</li><li>HTTPS: the use of the Server Name Indication (SNI) extension with TLS. The client indicates the hostname it wants to connect to at the start of the handshake process.</li></ul><p>When having a domain name as scope, operating virtual host (a.k.a. vhost) fuzzing is recommended to possibly find alternate domain names of subdomains that point to a virtual host, and thus have a better knowledge of the attack surface. This technique relies on the attacker using a dictionary/wordlist. A request is made for every line of the wordlist to differentiate pages that exist and pages that don&#39;t</p><div class="warning custom-block"><p>This technique is not to be confused with <a href="./domains-enumeration#dns-bruteforcing">DNS bruteforcing</a>. Vhost fuzzing/bruteforcing requests are made over HTTP and rely on the virtual hosting feature that many web app profit from. <a href="./domains-enumeration#dns-bruteforcing">DNS bruteforcing</a> relies on domain name resolution requests made over DNS to a DNS server.</p></div><h2 id="practice" tabindex="-1">Practice <a class="header-anchor" href="#practice" aria-label="Permalink to &quot;Practice&quot;">​</a></h2><p>Tools like <a href="https://github.com/OJ/gobuster" target="_blank" rel="noreferrer">gobuster</a> (Go), <a href="https://github.com/xmendez/wfuzz" target="_blank" rel="noreferrer">wfuzz</a> (Python) and <a href="https://github.com/ffuf/ffuf" target="_blank" rel="noreferrer">ffuf</a> (Go) can do vhost fuzzing/bruteforcing. Burp Suite can do it too. Depending on the web application, one will be better suited than another and additional options will be needed.</p><p>Vhost fuzzing needs to be slowed down when testing production instances as it could lead to an unintended denial of service.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gobuster</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vhost</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --useragent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;PENTEST&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --wordlist</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/path/to/wordlist.txt&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $URL</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wfuzz</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Host: FUZZ.something.com&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --hc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 404,403</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;User-Agent: PENTEST&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -z</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file,&quot;/path/to/wordlist.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $URL</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffuf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Host: FUZZ.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$DOMAIN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;User-Agent: PENTEST&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/path/to/wordlist.txt&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $URL</span></span></code></pre></div><p>Some applications don&#39;t allow vhost fuzzing like showcased above. The command below can be attempted.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffuf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/path/to/wordlist.txt&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;http://FUZZ.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$TARGET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/&quot;</span></span></code></pre></div><div class="tip custom-block"><p>Virtual host fuzzing is not the only technique to find subdomains. There are others means to that end: see <a href="./domains-enumeration">subdomains enumeration</a>.</p></div><h2 id="resources" tabindex="-1">Resources <a class="header-anchor" href="#resources" aria-label="Permalink to &quot;Resources&quot;">​</a></h2><p><a href="https://www.ssl.com/article/sni-virtual-hosting-for-https/" target="_blank" rel="noreferrer">https://www.ssl.com/article/sni-virtual-hosting-for-https/</a></p><p><a href="https://en.wikipedia.org/wiki/Server_Name_Indication#cite_note-rfc3546-1" target="_blank" rel="noreferrer">https://en.wikipedia.org/wiki/Server_Name_Indication#cite_note-rfc3546-1</a></p><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Host" target="_blank" rel="noreferrer">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Host</a></p><p><a href="https://erev0s.com/blog/gobuster-directory-dns-and-virtual-hosts-bruteforcing/" target="_blank" rel="noreferrer">https://erev0s.com/blog/gobuster-directory-dns-and-virtual-hosts-bruteforcing/</a></p>',21)]))}const c=s(n,[["render",o]]);export{k as __pageData,c as default};
