import{_ as t,c as a,a5 as n,o as s}from"./chunks/framework.B5CpDqM0.js";const l="/assets/Clickjacking%20example.BYFhQqp2.png",u=JSON.parse('{"title":"Clickjacking","description":"","frontmatter":{"authors":"ShutdownRepo"},"headers":[],"relativePath":"web/config/http-headers/clickjacking/index.md","filePath":"web/config/http-headers/clickjacking/index.md","lastUpdated":1724982529000}'),o={name:"web/config/http-headers/clickjacking/index.md"};function r(i,e,c,p,d,h){return s(),a("div",null,e[0]||(e[0]=[n('<h1 id="clickjacking" tabindex="-1">Clickjacking <a class="header-anchor" href="#clickjacking" aria-label="Permalink to &quot;Clickjacking&quot;">​</a></h1><h2 id="theory" tabindex="-1">Theory <a class="header-anchor" href="#theory" aria-label="Permalink to &quot;Theory&quot;">​</a></h2><p>Lots of websites allow to browsers to render them in a <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame" target="_blank" rel="noreferrer"><code>&lt;frame&gt;</code></a>, <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe" target="_blank" rel="noreferrer"><code>&lt;iframe&gt;</code></a>, <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed" target="_blank" rel="noreferrer"><code>&lt;embed&gt;</code></a> or <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object" target="_blank" rel="noreferrer"><code>&lt;object&gt;</code></a>. This allows attackers to &quot;load&quot; the website in a transparent layer and trick users into thinking they are browsing the legitimate website. This allows attackers to &quot;hijack&quot; their clicks and make them do something else (<a href="https://shiflett.org/blog/2009/twitter-dont-click-exploit" target="_blank" rel="noreferrer">Twitter worm</a>, <a href="https://www.netsparker.com/blog/web-security/clickjacking-attack-on-facebook-how-tiny-attribute-save-corporation/" target="_blank" rel="noreferrer">Facebook likes</a>).</p><p><a href="./">HTTP security headers</a> like XFO (<code>X-Frame-Options</code>) and CSP (<code>Content-Security-Policy</code>) mitigate clickjacking attacks.</p><h2 id="practice" tabindex="-1">Practice <a class="header-anchor" href="#practice" aria-label="Permalink to &quot;Practice&quot;">​</a></h2><p class="caption"><img src="'+l+`" alt=""> (left) vulnerable | not vulnerable (right)</p><p>The following HTML code can be used in a browser to attempt a clickjacking on a target URL.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;html&gt;</span></span>
<span class="line"><span>    &lt;head&gt;</span></span>
<span class="line"><span>        &lt;title&gt;Clickjacking / framing test&lt;/title&gt;</span></span>
<span class="line"><span>    ​&lt;/head&gt;</span></span>
<span class="line"><span>    &lt;body&gt;</span></span>
<span class="line"><span>        &lt;h1&gt;Test a page for clickjacking/framing vulnerability&lt;/h1&gt;</span></span>
<span class="line"><span>        &lt;p&gt;Enter the URL to frame:&lt;/p&gt;</span></span>
<span class="line"><span>        &lt;input id=&quot;url&quot; type=&quot;text&quot; value=&quot;http://TARGET.com&quot;&gt;&lt;/input&gt;</span></span>
<span class="line"><span>        &lt;button id=&quot;submit-test&quot; onclick=&#39;document.getElementById(&quot;iframe&quot;).src=document.getElementById(&quot;url&quot;).value&#39;&gt;Test it!&lt;/button&gt;</span></span>
<span class="line"><span>        &lt;br /&gt;</span></span>
<span class="line"><span>        &lt;br /&gt;</span></span>
<span class="line"><span>        &lt;hr&gt;</span></span>
<span class="line"><span>        &lt;br /&gt;</span></span>
<span class="line"><span>        &lt;iframe src=&quot;about:blank&quot; id=&quot;iframe&quot; width=&quot;100%&quot; height=&quot;75%&quot;&gt;&lt;/iframe&gt;</span></span>
<span class="line"><span>    &lt;/body&gt;</span></span>
<span class="line"><span>&lt;/html&gt;</span></span></code></pre></div><h2 id="resources" tabindex="-1">Resources <a class="header-anchor" href="#resources" aria-label="Permalink to &quot;Resources&quot;">​</a></h2><p><a href="https://owasp.org/www-community/attacks/Clickjacking" target="_blank" rel="noreferrer">https://owasp.org/www-community/attacks/Clickjacking</a></p>`,10)]))}const k=t(o,[["render",r]]);export{u as __pageData,k as default};
