import{_ as e,c as a,a5 as n,o as i}from"./chunks/framework.B5CpDqM0.js";const k=JSON.parse('{"title":"Port scanning","description":"","frontmatter":{"authors":"ShutdownRepo"},"headers":[],"relativePath":"ad/recon/port-scanning.md","filePath":"ad/recon/port-scanning.md","lastUpdated":1724982529000}'),o={name:"ad/recon/port-scanning.md"};function t(r,s,l,c,d,p){return i(),a("div",null,s[0]||(s[0]=[n(`<h1 id="port-scanning" tabindex="-1">Port scanning <a class="header-anchor" href="#port-scanning" aria-label="Permalink to &quot;Port scanning&quot;">â€‹</a></h1><p>In an Active Directory domain, domain controllers can be easily spotted depending on what services they host. Each service is usually accessible specific TCP and/or UDP port(s) making the DCs stand out in the network. Here is a list of ports to look for when hunting for domain controllers.</p><ul><li><code>53/TCP</code> and <code>53/UDP</code> for DNS</li><li><code>88/TCP</code> for Kerberos authentication</li><li><code>135/TCP</code> and <code>135/UDP</code> MS-RPC epmapper (EndPoint Mapper)</li><li><code>137/TCP</code> and <code>137/UDP</code> for NBT-NS</li><li><code>138/UDP</code> for NetBIOS datagram service</li><li><code>139/TCP</code> for NetBIOS session service</li><li><code>389/TCP</code> for LDAP</li><li><code>636/TCP</code> for LDAPS (LDAP over TLS/SSL)</li><li><code>445/TCP</code> and <code>445/UDP</code> for SMB</li><li><code>464/TCP</code> and <code>445/UDP</code> for Kerberos password change</li><li><code>3268/TCP</code> for LDAP Global Catalog</li><li><code>3269/TCP</code> for LDAP Global Catalog over TLS/SSL</li></ul><p>The <a href="https://nmap.org/" target="_blank" rel="noreferrer">nmap</a> utility can be used to scan for open ports in an IP range.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -sS for TCP SYN scan</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -n for no name resolution</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># --open to only show (possibly) open port(s)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -p for port(s) number(s) to scan</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nmap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sS</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --open</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 88,389</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $IP_RANGE</span></span></code></pre></div>`,5)]))}const g=e(o,[["render",t]]);export{k as __pageData,g as default};
