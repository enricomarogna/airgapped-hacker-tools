import{_ as t,c as a,a5 as i,o as r}from"./chunks/framework.B5CpDqM0.js";const o="/assets/Kerberos%20delegations%20mindmap.BTXqTrFy.png",k=JSON.parse('{"title":"Forged tickets","description":"MITRE ATT&CK™ Sub-techniques T1558.001 and T1558.002","frontmatter":{"description":"MITRE ATT&CK™ Sub-techniques T1558.001 and T1558.002","authors":"ShutdownRepo"},"headers":[],"relativePath":"ad/movement/kerberos/forged-tickets/index.md","filePath":"ad/movement/kerberos/forged-tickets/index.md","lastUpdated":1724982529000}'),s={name:"ad/movement/kerberos/forged-tickets/index.md"};function n(c,e,d,h,l,u){return r(),a("div",null,e[0]||(e[0]=[i('<h1 id="forged-tickets" tabindex="-1">Forged tickets <a class="header-anchor" href="#forged-tickets" aria-label="Permalink to &quot;Forged tickets&quot;">​</a></h1><p>Silver, Golden, Diamond and Sapphire tickets are forged or modified Kerberos tickets that can be used with <a href="./../ptt">pass-the-ticket</a> to access services in an Active Directory domain.</p><details class="details custom-block"><summary>Glossary</summary><p>PAC (Privileged Authentication Certificate): a special set of data contained in the ticket (TGT or Service Ticket) that give information about the requesting user (username, groups, UserAccountControl, etc.).</p><p>Long-term key: the long-term key of an account refers to its NT hash (when the RC4 etype is not disabled in the domain) or another Kerberos key (DES, AES128, AES256).</p></details><h2 id="techniques" tabindex="-1">Techniques <a class="header-anchor" href="#techniques" aria-label="Permalink to &quot;Techniques&quot;">​</a></h2><h3 id="silver-tickets" tabindex="-1">Silver tickets <a class="header-anchor" href="#silver-tickets" aria-label="Permalink to &quot;Silver tickets&quot;">​</a></h3><p>The long-term key of a service account can be used to forge a Service ticket that can later be used with <a href="./../ptt">Pass-the-ticket</a> to access that service. In a Silver Ticket scenario, an attacker will forge a Service Ticket containing a PAC that features arbitrary information about the requesting user, effectively granting lots of access.</p><div class="tip custom-block"><p>Read the <a href="./silver">Silver ticket</a> article for more insight</p></div><h3 id="golden-ticket" tabindex="-1">Golden ticket <a class="header-anchor" href="#golden-ticket" aria-label="Permalink to &quot;Golden ticket&quot;">​</a></h3><p>The long-term key of the <code>krbtgt</code> account can be used to forge a special TGT (Ticket Granting Ticket) that can later be used with <a href="./../ptt">Pass-the-ticket</a> to access any resource within the AD domain. The <code>krbtgt</code>&#39;s key is used to encrypt the PAC. In a Golden Ticket scenario, an attacker that has knowledge of the <code>krbtgt</code> long-term key, will usually forge a PAC indicating that the user belongs to privileged groups. This PAC will be embedded in a forged TGT. The TGT will be used to request Service Tickets than will then feature the PAC presented in the TGT, hence granting lots of access to the attacker.</p><div class="tip custom-block"><p>Read the <a href="./golden">Golden ticket</a> article for more insight</p></div><h3 id="diamond-ticket" tabindex="-1">Diamond ticket <a class="header-anchor" href="#diamond-ticket" aria-label="Permalink to &quot;Diamond ticket&quot;">​</a></h3><p>Golden and Silver tickets can usually be detected by probes that monitor the service ticket requests (<code>KRB_TGS_REQ</code>) that have no corresponding TGT requests (<code>KRB_AS_REQ</code>). Those types of tickets also feature forged PACs that sometimes fail at mimicking real ones, thus increasing their detection rates. Diamond tickets can be a useful alternative in the way they simply request a normal ticket, decrypt the PAC, modify it, recalculate the signatures and encrypt it again. It requires knowledge of the target service long-term key (can be the <code>krbtgt</code> for a TGT, or a target service for a Service Ticket).</p><div class="tip custom-block"><p>Read the <a href="./diamond">Diamond ticket</a> article for more insight</p></div><h3 id="sapphire-ticket" tabindex="-1">Sapphire ticket <a class="header-anchor" href="#sapphire-ticket" aria-label="Permalink to &quot;Sapphire ticket&quot;">​</a></h3><p>Sapphire tickets are similar to Diamond tickets in the way the ticket is not forged, but instead based on a legitimate one obtained after a request. The difference lays in how the PAC is modified. The Diamond ticket approach modifies the legitimate PAC to add some privileged groups (or replace it with a fully-forged one). In the Sapphire ticket approach, the PAC of another powerful user is obtained through an <a href="./../#s4u2self-+-u2u">S4U2self+u2u</a> trick. This PAC then replaces the one featured in the legitimate ticket. The resulting ticket is an assembly of legitimate elements, and follows a standard ticket request, which makes it then most difficult silver/golden ticket variant to detect.</p><div class="tip custom-block"><p>Read the <a href="./sapphire">Sapphire ticket</a> article for more insight</p></div><h3 id="the-bronze-bit-vuln" tabindex="-1">The bronze bit vuln <a class="header-anchor" href="#the-bronze-bit-vuln" aria-label="Permalink to &quot;The bronze bit vuln&quot;">​</a></h3><p>The Bronze bit vulnerability (CVE-2020-17049) introduced the possibility of forwarding service tickets when it shouldn&#39;t normally be possible (protected users, unconstrained delegation, constrained delegation configured with protocol transition).</p><p class="caption"><img src="'+o+'" alt=""> Kerberos delegations mindmap</p><h2 id="resources" tabindex="-1">Resources <a class="header-anchor" href="#resources" aria-label="Permalink to &quot;Resources&quot;">​</a></h2><p><a href="https://en.hackndo.com/kerberos" target="_blank" rel="noreferrer">https://en.hackndo.com/kerberos</a></p>',21)]))}const m=t(s,[["render",n]]);export{k as __pageData,m as default};
